spring.application.name=Rifas

#spring.datasource.url=${DB_URL:jdbc:mysql://java_db:3306/sorteos?createDatabaseIfNotExist=true&serverTimezone=UTC}
#spring.datasource.username=${DB_USER:root}
#spring.datasource.password=${DB_PASSWORD:Tanque.123}
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#server.port=${SERVER_PORT:8080}

spring.datasource.url = jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}

spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.user.datasource.driver-class-name=com.mysql.jdbc.driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true

server.port=${PORT}
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

#spring.web.resources.static-locations=file:///D:/uploadVideos/
spring.mvc.static-path-pattern=/videos/**

spring.web.resources.static-locations=classpath:/static/,file:./uploads/

# Para videos, usamos la ruta en el contenedor
#spring.web.resources.static-locations=file:///app/videos/





spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=leodanismiranda@gmail.com
spring.mail.password=Leodanis*2025
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.debug=true
